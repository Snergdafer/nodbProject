[{"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\index.js":"1","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\App.js":"2","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\reportWebVitals.js":"3","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\AvailableRecrutis.js":"4","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\Party.js":"5","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\CharacterViewer.js":"6","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\Person.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":7096,"mtime":1612368772278,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":757,"mtime":1612371273488,"results":"12","hashOfConfig":"9"},{"size":482,"mtime":1612371391394,"results":"13","hashOfConfig":"9"},{"size":4836,"mtime":1612370685195,"results":"14","hashOfConfig":"9"},{"size":284,"mtime":1612371228834,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"18543bq",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\index.js",[],["33","34"],"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\App.js",[],"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\reportWebVitals.js",[],"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\AvailableRecrutis.js",[],"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\Party.js",[],"C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\CharacterViewer.js",["35"],"import React, {Component} from 'react'\r\n\r\n\r\n\r\n\r\nclass CharacterViewer extends Component {\r\n    // constructor(props) {\r\n    //     super(props)\r\n    //     this.state = {\r\n    //         name: props.characterForm.name,\r\n    //         backstory: props.characterForm.backstory,\r\n    //         img: props.characterForm.img,\r\n    //         health: props.characterForm.health,\r\n    //         attack: props.characterForm.attack,\r\n    //         movement: props.characterForm.movement,\r\n    //         range: props.characterForm.range,\r\n    //         armor: props.characterForm.armor,\r\n    //         id: props.characterForm.id\r\n    //     }\r\n    //     this.updateName = this.updateName.bind(this)\r\n    //     this.updateBackstory = this.updateBackstory.bind(this)\r\n    //     this.updateHealth = this.updateHealth.bind(this)\r\n    //     this.updateArmor = this.updateArmor.bind(this)\r\n    //     this.updateAttack = this.updateAttack.bind(this)\r\n    //     this.updateMovement = this.updateMovement.bind(this)\r\n    //     this.updateRange = this.updateRange.bind(this)\r\n    // }\r\n    // componentDidUpdate(prevProps, prevState) {\r\n    //     if(this.props !== prevProps) {\r\n    //         this.setState({\r\n    //             name: this.props.characterForm.name,\r\n    //             backstory: this.props.characterForm.backstory,\r\n    //             img: this.props.characterForm.img,\r\n    //             health: this.props.characterForm.health,\r\n    //             attack: this.props.characterForm.attack,\r\n    //             movement: this.props.characterForm.movement,\r\n    //             range: this.props.characterForm.range,\r\n    //             armor: this.props.characterForm.armor,\r\n    //             id: this.props.characterForm.id\r\n    //         })\r\n    //     }\r\n    // }\r\n    \r\n\r\n    // updateName(value) {\r\n    //     this.setState({\r\n    //         name: value\r\n    //     })\r\n    //   }\r\n\r\n    //   updateBackstory(value) {\r\n    //     this.setState({\r\n         \r\n    //           backstory: value\r\n    \r\n    //     })\r\n    //   }\r\n    \r\n    //   updateHealth(value) {\r\n    //     this.setState({\r\n            \r\n    //           health: value\r\n            \r\n    //     })\r\n    //   }\r\n    \r\n    //   updateArmor(value) {\r\n    //     this.setState({\r\n          \r\n    //           armor: value\r\n            \r\n    //     })\r\n    //   }\r\n    \r\n    //   updateAttack(value) {\r\n    //     this.setState({\r\n        \r\n    //           attack: value\r\n            \r\n    //     })\r\n    //   }\r\n    \r\n    //   updateMovement(value) {\r\n    //     this.setState({\r\n         \r\n    //           movement: value\r\n            \r\n    //     })\r\n    //   }\r\n    \r\n    //   updateRange(value) {\r\n    //     this.setState({\r\n           \r\n    //           range: value\r\n            \r\n    //     })\r\n    //   }\r\n\r\n   render(){\r\n       return (\r\n           <div className=\"characterViewer\">\r\n\r\n            <div className=\"bio\">\r\n                <span className=\"info\"><input type=\"text\" value={this.props.name} onChange={ e => this.props.updateName(e.target.value)}/></span>\r\n                <p className=\"info\"><textarea className='backstory' type=\"text\" value={this.props.backstory} onChange={ e => this.props.updateBackstory(e.target.value)}/></p>\r\n            </div>\r\n            <div className=\"picture\">\r\n                <img src={this.props.characterForm.img}/>\r\n            </div>\r\n            <div className=\"stats\">\r\n                <div className=\"viewerButtons\">Stats:\r\n                    <button className=\"viewButton\" onClick={() => this.props.hire(this.props.characterForm.id)}>HIRE</button>\r\n                    <button className=\"viewButton\"onClick={() => this.props.updateRecruit(this.props.characterForm.id)}>Edit</button>\r\n                    <button className=\"viewButton\"onClick={() => this.props.createRecruit()}>Make Your Own</button>\r\n                </div>\r\n                <div>\r\n                    <span className=\"info\">Health: <input type=\"text\" value={this.props.health} onChange={ e => this.props.updateHealth(e.target.value)}/></span>\r\n                    <span className=\"info\">Armor: <input type=\"text\" value={this.props.armor} onChange={ e => this.props.updateArmor(e.target.value)}/></span>\r\n                    <span className=\"info\">Attack: <input type=\"text\" value={this.props.attack} onChange={ e => this.props.updateAttack(e.target.value)}/></span><br/>\r\n                    <span className=\"info\">Movement: <input type=\"text\" value={this.props.movement} onChange={ e => this.props.updateMovement(e.target.value)}/></span>\r\n                    <span className=\"info\">Range: <input type=\"text\" value={this.props.range} onChange={ e => this.props.updateRange(e.target.value)}/></span>\r\n                </div>\r\n            </div>\r\n\r\n           </div>\r\n       )\r\n   }\r\n\r\n}\r\n\r\nexport default CharacterViewer","C:\\Users\\jesse\\devmountain\\unit-04\\day5\\assignment\\party_builder\\src\\components\\Person.js",["36"],"import React, {Component} from 'react'\r\n\r\nfunction Person(props) {\r\n\r\n    return(\r\n    <>\r\n    <h2 onClick={() => props.viewOne(props.person.id)}>{props.person.name}</h2>\r\n    <button onClick={() => props.delete(props.person.id)}>X</button>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default Person",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":108,"column":17,"nodeType":"43","endLine":108,"endColumn":58},{"ruleId":"44","severity":1,"message":"45","line":1,"column":16,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]